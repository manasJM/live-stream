{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/googleAPI.service.ts","./src/app/live-stream/live-stream.component.css","./src/app/live-stream/live-stream.component.html","./src/app/live-stream/live-stream.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,oCAAoC,oBAAoB,KAAK,gBAAgB,4BAA4B,qBAAqB,qBAAqB,4BAA4B,KAAK,eAAe,wBAAwB,2BAA2B,KAAK,qBAAqB,uBAAuB,KAAK,C;;;;;;;ACA5S,oP;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACI;AAC8B;AAC5B;AAEA;AACM;AACN;AACQ;AACmB;AAmC1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QA/BrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,8EAAc;gBACd,+FAAmB;aACpB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,8EAAgB;gBAChB,qEAAY,CAAC,OAAO,CAAC;oBACnB;wBACE,IAAI,EAAE,OAAO;wBACb,SAAS,EAAE,8EAAc;wBACzB,IAAI,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;qBACvB;oBACD;wBACE,IAAI,EAAE,YAAY;wBAClB,SAAS,EAAE,+FAAmB;wBAC9B,WAAW,EAAE,CAAC,sEAAS,CAAC;qBACzB;oBACD;wBACE,IAAI,EAAE,EAAE;wBACR,UAAU,EAAE,QAAQ;wBACpB,SAAS,EAAE,MAAM;qBAClB;iBACJ,CAAC;aACH;YACC,SAAS,EAAE,CAAC,4EAAgB,EAAE,sEAAS,CAAC;YACxC,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AC7CqB;AACwD;AAGnG;IAEI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAChC,2BAA2B;YAC3B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAbQ,SAAS;QADrB,yEAAU,EAAE;yCAGmB,+DAAM;OAFzB,SAAS,CAcrB;IAAD,gBAAC;CAAA;AAdqB;;;;;;;;;;;;;;;;;;;;;;ACJqB;AACmB;AAC/B;AAM/B;IAEE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC;;OAEG;IACH,oCAAS,GAAT;QACE,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,MAAM,GAAG;YACX,cAAc,EAAE,KAAK;YACrB,MAAM,EAAE,mCAAmC;YAC3C,IAAI,EAAE,aAAa;SACpB;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8CAA8C,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IACzF,CAAC;IAED;;;OAGG;IACH,0CAAe,GAAf,UAAgB,UAAU;QACxB,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,MAAM,GAAG;YACX,cAAc,EAAE,KAAK;YACrB,MAAM,EAAE,4BAA4B;YACpC,YAAY,EAAE,UAAU;SACzB;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yDAAyD,EAAE,EAAC,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;IACpG,CAAC;IA/BU,gBAAgB;QAD5B,yEAAU,EAAE;yCAGe,wEAAU;OAFzB,gBAAgB,CAiC5B;IAAD,uBAAC;CAAA;AAjC4B;;;;;;;;ACR7B,qCAAqC,oBAAoB,qBAAqB,yBAAyB,KAAK,C;;;;;;;ACA5G,23BAA23B,qCAAqC,mG;;;;;;;;;;;;;;;;;;;;;;ACAn2B;AACP;AACf;AACH;AAOpC;IAOE,6BAAoB,gBAAkC,EAClC,MAAc;QADd,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,WAAM,GAAN,MAAM,CAAQ;QAJlC,gBAAW,GAAG,EAAE,CAAC;IAKhB,CAAC;IAED,sCAAQ,GAAR;QACC,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED;;OAEG;IACH,6CAAe,GAAf;QAAA,iBAsBC;QArBC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,cAAI;YACvC,IAAI,MAAM,CAAC;YACX,GAAG,EAAa,UAAa,EAAb,SAAI,CAAC,OAAO,CAAC,EAAb,cAAa,EAAb,IAAa;gBAAzB,IAAI,IAAI;gBACV,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC;gBACpD,EAAE,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;oBAAE,KAAK,CAAC;gBAAC,CAAC;aAChC;YACF,MAAM,CAAC,KAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;YACjC,KAAI,CAAC,iBAAiB,GAAG,KAAI,CAAC,YAAY,CAAC;YAC3C,2EAA2E;YAC3E,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC;gBAC1B,KAAI,CAAC,eAAe,EAAE,CAAC;YACzB,CAAC,EAAE,GAAG,CAAC,uBAAuB,CAAC,CAAC,CAAC;QACvC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAET,CAAC;IAED;;;OAGG;IAEH,4CAAc,GAAd;QAAA,iBASC;QARC,EAAE,EAAC,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAE,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAClD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,cAAI;gBAC5C,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,KAAI,CAAC,WAAW,CAAC;YACnF,CAAC,CAAC,CAAC;QACL,CAAC;QAAA,IAAI,CAAC,CAAC;YACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,yCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACnB,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,CAAC;IACH,CAAC;IA9DU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAQsC,4EAAgB;YAC1B,+DAAM;OARvB,mBAAmB,CA+D/B;IAAD,0BAAC;CAAA;AA/D+B;;;;;;;;ACVhC,+BAA+B,uBAAuB,qBAAqB,KAAK,K;;;;;;;ACAhF,qP;;;;;;;;;;;;;;;;;;;;ACAgD;AACT;AASvC;IASE,wBAAoB,MAAc,EACd,IAAY;QADhC,iBAWC;QAXmB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAQ;QARhC,mBAAc,GAAG,0EAA0E,CAAC;QAC5F,mBAAc,GAAG;YACf,yCAAyC;SAC1C,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAOV,uCAAuC;QACtC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACd,SAAS,EAAE,KAAI,CAAC,cAAc;gBAC9B,KAAK,EAAE,KAAI,CAAC,cAAc;aAC5B,CAAC,CAAC;YACH,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,8BAAK,GAAL;QAAA,iBAMC;QALC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,aAAG;YAC/B,IAAI,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YACjD,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,eAAe,EAAE,CAAC,YAAY,CAAC,CAAC;YACvE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IA/BU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAU4B,+DAAM;YACR,6DAAM;OAVrB,cAAc,CAgC1B;IAAD,qBAAC;CAAA;AAhC0B;;;;;;;;;;ACVpB,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;;;;;;;;;;;;;;ACF6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".live-stream-app {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nheader {\\r\\n    background: #205081;\\r\\n    color: white;\\r\\n    padding: 8px;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    font-size: 20px;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n.router-div {\\r\\n    margin: 0 20px;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"live-stream-app\\\">\\n  \\n  <header>\\n    <div class=\\\"title\\\">\\n      Live Stream Application\\n    </div>\\n  </header>\\n\\n   <div class=\\\"router-div\\\">\\n      <router-outlet></router-outlet>\\n   </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport {GoogleAPIService} from './googleAPI.service';\nimport {AuthGuard} from './auth-guard.service';\nimport {LoginComponent} from './login/login.component';\nimport { LiveStreamComponent } from './live-stream/live-stream.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LiveStreamComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {\n        path: 'login',\n        component: LoginComponent,\n        data: {title: 'Login'}\n      },\n      {\n        path: 'liveStream',\n        component: LiveStreamComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n  ])\n],\n  providers: [GoogleAPIService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('token')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['login']);\r\n        return false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport {URLSearchParams, Response} from '@angular/http';\n\n\n\n@Injectable()\nexport class GoogleAPIService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Calls Google API to get the chat id which is required to get chat messages\n   */\n  getChatId() {\n    const token = localStorage.getItem('token');\n    let params = {\n      'access_token': token,\n      'part': \"id, snippet, liveStreamingDetails\",\n      'id': \"y3niFzo5VLI\"\n    }\n    \n    return this.http.get('https://www.googleapis.com/youtube/v3/videos', {params: params});\n  }\n\n  /**\n   * Calls Google API to get live chat messages for the live stream\n   * @param liveChatId\n   */\n  getChatMessages(liveChatId) {\n    const token = localStorage.getItem('token');\n    let params = {\n      'access_token': token,\n      'part': \"id, snippet, authorDetails\",\n      'liveChatId': liveChatId\n    }\n\n    return this.http.get('https://www.googleapis.com/youtube/v3/liveChat/messages', {params: params});\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/googleAPI.service.ts","module.exports = \".chat-messages>ul {\\r\\n    width:600px;\\r\\n    height:500px;\\r\\n    overflow: scroll;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/live-stream/live-stream.component.css\n// module id = ./src/app/live-stream/live-stream.component.css\n// module chunks = main","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n                <iframe id=\\\"existing-iframe-example\\\"\\r\\n                width=\\\"640\\\" height=\\\"360\\\"\\r\\n                src=\\\"https://www.youtube.com/embed/y3niFzo5VLI?enablejsapi=1&autoplay=1\\\"\\r\\n                frameborder=\\\"0\\\"\\r\\n                style=\\\"border: solid 4px #37474F\\\"></iframe>\\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"chat-messages\\\">\\r\\n                <p>Chat Messages</p>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchInput\\\"\\r\\n             placeholder=\\\"Filter list by entering a user name\\\" /><br>\\r\\n             <button class=\\\"btn btn-primary\\\" (click)=\\\"filterChatList()\\\">Filter</button><br><br>\\r\\n                <ul>\\r\\n                        <li *ngFor=\\\"let chatMessge of chatMessagesModel\\\">\\r\\n                          {{ chatMessge.snippet.displayMessage }}\\r\\n                        </li>\\r\\n                </ul>\\r\\n        </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/live-stream/live-stream.component.html\n// module id = ./src/app/live-stream/live-stream.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {GoogleAPIService} from '../googleAPI.service';\nimport {Router} from '@angular/router';\nimport 'rxjs/add/operator/mergeMap';\n\n@Component({\n  selector: 'app-live-stream',\n  templateUrl: './live-stream.component.html',\n  styleUrls: ['./live-stream.component.css']\n})\nexport class LiveStreamComponent implements OnInit, OnDestroy {\n\n  chatMessages; \n  chatMessagesModel;\n  searchInput = '';\n  timeoutId;\n\n  constructor(private googleAPIService: GoogleAPIService,\n              private router: Router) {\n   }\n\n   ngOnInit() {\n    this.executeAPICalls();\n  }\n\n  /**\n   * Gets the live chat messages for the specified live stream\n   */\n  executeAPICalls() {\n    this.googleAPIService.getChatId().mergeMap(data => {\n            let chatId;\n            for(let item of data['items']) {\n              chatId = item.liveStreamingDetails.activeLiveChatId;\n              if (chatId != null) {  break; }\n            }\n           return this.googleAPIService.getChatMessages(chatId);\n          }).subscribe(res => {\n              this.chatMessages = res['items'];\n              this.chatMessagesModel = this.chatMessages;\n              // updates the chat list based on the polling returned by the chat messages\n              this.timeoutId = setTimeout(() => {\n                this.executeAPICalls();\n              }, res['pollingIntervalMillis']);\n        },\n        error => {\n          this.router.navigate(['login']);\n          window.location.reload(true);\n          console.log(error);\n        });\n    \n  }\n\n  /**\n   * Filters the chat list given a user name.\n   * If no user name is specified we show the whole list\n   */\n\n  filterChatList() {\n    if(this.searchInput.length > 0 ) {\n      this.searchInput = this.searchInput.toLowerCase();\n      this.chatMessagesModel = this.chatMessages.filter(item => {\n                return item.authorDetails.displayName.toLowerCase() === this.searchInput;\n      });\n    }else {\n      this.chatMessagesModel = this.chatMessages;\n    }    \n  }\n\n  ngOnDestroy() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/live-stream/live-stream.component.ts","module.exports = \".login-form {\\r\\n    margin: 0 auto;\\r\\n    width: 600px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"login-page\\\">\\n  <div class=\\\"login-form\\\">\\n    <h5>Sign In using your google account to join the live stream</h5>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"login()\\\">Sign In</button>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import {Component, NgZone} from '@angular/core';\nimport {Router} from '@angular/router';\n\ndeclare const gapi: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  googleClientId = '822051958083-mp3anh7elnegkgabcsagl2dnss7917cv.apps.googleusercontent.com';\n  googleApiScope = [\n    'https://www.googleapis.com/auth/youtube'\n  ].join(' ');\n\n  googleAuth: any;\n\n  constructor(private router: Router,\n              private zone: NgZone) {\n\n    // intialize google client i.e the app \n     gapi.load('auth2', () => {\n         gapi.auth2.init({\n           client_id: this.googleClientId,\n           scope: this.googleApiScope\n        });\n        this.googleAuth = gapi.auth2.getAuthInstance();\n    });\n  }\n\n  /**\n   * Starts the Auth 2.0 flow to login the user\n   */\n  login() {\n    this.googleAuth.signIn().then(res => {\n      let googleUser = this.googleAuth.currentUser.get();\n        localStorage.setItem('token', googleUser.getAuthResponse().access_token);\n          this.router.navigate(['liveStream']);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}